/*

Largest product in a series

Find the greatest product of five consecutive digits in the 1000-digit number.
(reproduced below)

*/

func p8_greatestProduct5ConsecutiveDigits() -> Int {
    var s1000 = "73167176531330624919225119674426574742355349194934"
    s1000 += "96983520312774506326239578318016984801869478851843"
    s1000 += "85861560789112949495459501737958331952853208805511"
    s1000 += "12540698747158523863050715693290963295227443043557"
    s1000 += "66896648950445244523161731856403098711121722383113"
    s1000 += "62229893423380308135336276614282806444486645238749"
    s1000 += "30358907296290491560440772390713810515859307960866"
    s1000 += "70172427121883998797908792274921901699720888093776"
    s1000 += "65727333001053367881220235421809751254540594752243"
    s1000 += "52584907711670556013604839586446706324415722155397"
    s1000 += "53697817977846174064955149290862569321978468622482"
    s1000 += "83972241375657056057490261407972968652414535100474"
    s1000 += "82166370484403199890008895243450658541227588666881"
    s1000 += "16427171479924442928230863465674813919123162824586"
    s1000 += "17866458359124566529476545682848912883142607690042"
    s1000 += "24219022671055626321111109370544217506941658960408"
    s1000 += "07198403850962455444362981230987879927244284909188"
    s1000 += "84580156166097919133875499200524063689912560717606"
    s1000 += "05886116467109405077541002256983155200055935729725"
    s1000 += "71636269561882670428252483600823257530420752963450"

    let s1000Array = s1000.unicodeScalars.map { $0.value }
    
    var i = 0
    var greatestProduct = 0
    let zeroValue = "0".unicodeScalars.map { $0.value }[0]
    while i < s1000Array.count - 5 {
        var product = 1
        var j = 0
        while j < 5 {
            product *= Int(s1000Array[i + j] - zeroValue)
            j += 1
        }
        if product > greatestProduct {
            greatestProduct = product
        }
        i += 1
    }
    return greatestProduct
}

